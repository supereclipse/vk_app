---
openapi: 3.0.1
info:
  title: API V1
  version: v1
  description: API documentation for the Student Management System
paths:
  "/students":
    post:
      tags:
      - students
      summary: Регистрация нового студента
      operationId: createStudent
      security:
      - bearerAuth: []
      requestBody:
        description: Новый студент
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                last_name:
                  type: string
                surname:
                  type: string
                class_id:
                  type: integer
                school_id:
                  type: integer
              required:
              - first_name
              - last_name
              - surname
              - class_id
              - school_id
      responses:
        '201':
          description: Student created
        '405':
          description: Invalid input
      parameters: []
  "/students/{user_id}":
    delete:
      tags:
      - students
      summary: Удалить студента
      operationId: deleteStudent
      security:
      - bearerAuth: []
      parameters:
      - name: user_id
        in: path
        required: true
        description: ID студента
        schema:
          type: integer
      responses:
        '204':
          description: Студент успешно удалён
        '400':
          description: Некорректный id студента
        '401':
          description: Некорректная авторизация
  "/school/{school_id}/klass":
    get:
      tags:
      - klass
      summary: Вывести список классов школыыы
      operationId: getClassList
      parameters:
      - name: school_id
        in: path
        required: true
        description: ID школы
        schema:
          type: integer
      responses:
        '200':
          description: Список классов
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      "$ref": "#/components/schemas/Klass"
  "/school/{school_id}/klass/{klass_id}/students":
    get:
      summary: Вывести список студентов класса
      tags:
      - students
      parameters:
      - name: school_id
        in: path
        required: true
        description: ID школы
        schema:
          type: integer
      - name: klass_id
        in: path
        required: true
        description: ID класса
        schema:
          type: integer
      responses:
        '200':
          description: Список студентов
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      "$ref": "#/components/schemas/Student"
servers:
- url: http://127.0.0.1:3000
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: www.example.com
components:
  schemas:
    Student:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        surname:
          type: string
        class_id:
          type: integer
        school_id:
          type: integer
      required:
      - first_name
      - last_name
      - surname
      - class_id
      - school_id
    Klass:
      type: object
      required:
      - id
      - number
      - letter
      - students_count
      properties:
        id:
          type: integer
          format: int32
          example: 10
          readOnly: true
        number:
          type: integer
          format: int32
          example: 1
          description: Цифра класса
        letter:
          type: string
          example: Б
          description: Буква класса
        students_count:
          type: integer
          format: int32
          example: 32
          readOnly: true
          description: Количество учеников в классе
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
- bearerAuth: []
